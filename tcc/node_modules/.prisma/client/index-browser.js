
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  detectRuntime,
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.3.1
 * Query Engine version: 61e140623197a131c2a6189271ffee05a7aa9a59
 */
Prisma.prismaVersion = {
  client: "5.3.1",
  engine: "61e140623197a131c2a6189271ffee05a7aa9a59"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.NotFoundError = () => {
  throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.defineExtension = () => {
  throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EscolaScalarFieldEnum = {
  id: 'id',
  nomeEscola: 'nomeEscola'
};

exports.Prisma.TurmaScalarFieldEnum = {
  id: 'id',
  ano: 'ano',
  nomeTurma: 'nomeTurma',
  codEscola: 'codEscola'
};

exports.Prisma.TipoUsuarioScalarFieldEnum = {
  id: 'id',
  tipoUsuario: 'tipoUsuario'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  email: 'email',
  senha: 'senha',
  nome: 'nome',
  rm: 'rm',
  codEscola: 'codEscola',
  codTipoUsuario: 'codTipoUsuario',
  codTurma: 'codTurma'
};

exports.Prisma.AtividadeScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descricao: 'descricao',
  anexos: 'anexos',
  horasAtividade: 'horasAtividade',
  dataCriacao: 'dataCriacao',
  prazoEntrega: 'prazoEntrega',
  codTipoAtividade: 'codTipoAtividade'
};

exports.Prisma.TipoAtividadeScalarFieldEnum = {
  id: 'id',
  tipoAtividade: 'tipoAtividade'
};

exports.Prisma.EntregaScalarFieldEnum = {
  id: 'id',
  dataEntrega: 'dataEntrega',
  conteudo: 'conteudo',
  entregue: 'entregue',
  codAluno: 'codAluno',
  codAtividade: 'codAtividade'
};

exports.Prisma.SolicitacaoSuporteScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  conteudo: 'conteudo',
  dataCriacao: 'dataCriacao',
  codAluno: 'codAluno'
};

exports.Prisma.RespostaScalarFieldEnum = {
  id: 'id',
  dataResposta: 'dataResposta',
  resposta: 'resposta',
  codCoordenador: 'codCoordenador',
  codSolicitacao: 'codSolicitacao'
};

exports.Prisma.CorrecaoScalarFieldEnum = {
  id: 'id',
  dataCorrecao: 'dataCorrecao',
  conteudo: 'conteudo',
  codCoordenador: 'codCoordenador',
  codEntrega: 'codEntrega'
};

exports.Prisma.HorasScalarFieldEnum = {
  id: 'id',
  horasAnuais: 'horasAnuais',
  horasConcluidas: 'horasConcluidas',
  ano: 'ano',
  codAluno: 'codAluno'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Escola: 'Escola',
  Turma: 'Turma',
  tipoUsuario: 'tipoUsuario',
  Usuario: 'Usuario',
  Atividade: 'Atividade',
  tipoAtividade: 'tipoAtividade',
  Entrega: 'Entrega',
  SolicitacaoSuporte: 'SolicitacaoSuporte',
  Resposta: 'Resposta',
  Correcao: 'Correcao',
  Horas: 'Horas'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        const runtime = detectRuntime()
        const edgeRuntimeName = {
          'workerd': 'Cloudflare Workers',
          'deno': 'Deno and Deno Deploy',
          'netlify': 'Netlify Edge Functions',
          'edge-light': 'Vercel Edge Functions',
        }[runtime]

        let message = 'PrismaClient is unable to run in '
        if (edgeRuntimeName !== undefined) {
          message += edgeRuntimeName + '. As an alternative, try Accelerate: https://pris.ly/d/accelerate.'
        } else {
          message += 'this browser environment, or has been bundled for the browser (running in `' + runtime + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
